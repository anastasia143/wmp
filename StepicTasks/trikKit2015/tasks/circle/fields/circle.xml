<?xml version='1.0' encoding='utf-8'?>
<root>
    <world>
        <walls/>
        <colorFields/>
        <regions>
            <region filled="true" visible="false" height="25" width="25" y="38" color="#0000ff" id="start_zone" x="-194" type="rectangle"/>
            <region filled="false" visible="true" height="600" width="600" y="-249" color="#008000" id="outside_circle_zone" x="-481" type="ellipse"/>
            <region filled="false" visible="true" height="500" width="500" y="-199" color="#008000" id="inside_circle_zone" x="-431" type="ellipse"/>
            <region filled="true" visible="true" height="100" width="80" y="10" color="#0000ff" textX="0" textY="0" id="begin" x="54" type="rectangle" text="Начало"/>
            <region filled="true" visible="false" height="50" width="40" y="38" color="#00ff00" id="checkpoint" x="-476" type="rectangle"/>
        </regions>
    </world>
    <robots>
        <robot direction="0" position="-206:26" id="trikV62KitRobot">
            <sensors>
                <sensor direction="0" port="E3###input###M3###encoder3" position="0:0" type=""/>
                <sensor direction="0" port="M4###output######" position="0:0" type=""/>
                <sensor direction="0" port="E2###input###M2###encoder2" position="0:0" type=""/>
                <sensor direction="0" port="E4###input###M4###encoder4" position="0:0" type=""/>
                <sensor direction="0" port="E1###input###M1###encoder1" position="0:0" type=""/>
                <sensor direction="0" port="M3###output######" position="0:0" type=""/>
                <sensor direction="0" port="A1###input######sensorA1" position="0:0" type=""/>
            </sensors>
            <startPosition y="51" direction="0" x="-181"/>
            <wheels left="M3###output######" right="M4###output######"/>
        </robot>
    </robots>
    <constraints>

        <timelimit value="50000"/>
        
        <constraint checkOnce="true" failMessage="Робот должен находиться в начальной точке перед запуском программы!">
            <inside regionId="start_zone" objectId="robot1"/>
        </constraint>
        
        <!-- событие, которое говорит о том, что робот вообще поехал и стартует цепочку проверки -->
        <event id="We are alive, first move" settedUpInitially="true">
            <condition>
                <greater>
                    <objectState object="robot1.M3.power"/>
                    <int value="0"/>
                </greater>
            </condition>
            <trigger>
                <setUp id="Start"/>
            </trigger>
        </event>
        
        <!-- событие, которое выдает ошибку, если робот не тронулся с места в первую секунду -->
        <event id="Waiting for going forward too long" settedUpInitially="true">
            <conditions glue="and">
                <timer forceDropOnTimeout="true" timeout="1000"/>
                <settedUp id="We are alive, first move"/>
            </conditions>
            <trigger>
                <fail message="Робот так и не поехал в первую секунду"/>
            </trigger>
        </event>
        
        <!-- событие, возникающее, когда робот первый раз приезжает в зону старта -->
        <event id="Start">
            <condition>
                <inside regionId="begin" objectId="robot1"/>
            </condition>
            <triggers>
                <setUp id="Start draw"/>
                <drop id="Marker is up"/>
            </triggers>
        </event>

        <!-- событие, возникающее, когда робот выехал с зоны старта для рисования круга -->
        <event id="Start draw">
            <condition>
                <not>
                    <inside regionId="begin" objectId="robot1"/>
                </not>
            </condition>
            <triggers>
                <setUp id="In circle"/>
                <setUp id="Marker is down"/>
                <setUp id="Checkpoint"/>
            </triggers>
        </event>
        
        <!-- событие, которое сообщает об ошибке, если маркер опущен -->
        <event id="Marker is up" settedUpInitially="true">
            <conditions glue="and">
                <equals>
                    <objectState object="robot1.marker.isDown"/>
                    <bool value="true"/>
                </equals>
            </conditions>
            <trigger>
                <fail message="Маркер робота опущен до того, как начали рисовать круг"/>
            </trigger>
        </event>
        
        <!-- событие, которое сообщает об ошибке, если маркер робота поднят" -->
        <event id="Marker is down">
            <condition>
                <equals>
                    <objectState object="robot1.marker.isDown"/>
                    <bool value="false"/>
                </equals>
            </condition>
            <trigger>
                <fail message="Маркер робота должен быть опущен, чтобы рисовать круг"/>
            </trigger>
        </event>
        
        <!-- событие, которое сообщает об ошибке, если робот едет не по кругу заданного радиуса -->
        <event id="In circle">
            <conditions glue="or">
                <not>
                    <inside regionId="outside_circle_zone" objectId="robot1"/>
                </not>
                <inside regionId="inside_circle_zone" objectId="robot1"/>
            </conditions>
            <trigger>
                <fail message="робот едет не по кругу заданного радиуса"/>
            </trigger>
        </event>
        
        <!-- событие, которое проверяет, что робот проехал чекпоинт -->
        <event id="Checkpoint">
            <condition>
                <inside regionId="checkpoint" objectId="robot1"/>
            </condition>
            <trigger>
                <setUp id="Finish"/>
            </trigger>
        </event>
        
        <!-- событие, которое сообщает об успехе, когда робот приезжает на начало круга -->
        <event id="Finish">
            <condition>
                <inside regionId="begin" objectId="robot1"/>
            </condition>
            <trigger>
                <success/>
            </trigger>
        </event>

    </constraints>
</root>
